<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gspeed = 0.1;
IND = 0;
selected = -1;
layers_select = 3;
globalvar A1,A2,A3,A4,B1,B2,B3,B4;
A1 = 0;
A2 = 0;
A3 = 0;
A4 = 0;
B1 = 0;
B2 = 0;
B3 = 0;
B4 = 0;
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selected == -1) 
{
    exit;
}

if (!instance_exists(selected))
{
    selected = -1;
}
else
{
    with(selected)
    {
        var oldx, oldy, oldz;
        oldx = gx;
        oldy = gy;
        oldz = gz;
        
        gx += (keyboard_check(ord('D')) - keyboard_check(ord('S'))) * other.gspeed;
        gy += (keyboard_check(ord('X')) - keyboard_check(ord('E'))) * other.gspeed;
        gz += (keyboard_check(vk_up) - keyboard_check(vk_down)) * other.gspeed;
        
        if(gz &lt;= 0)
        {
            gz = 0;
        }
      
        for(var i = 0; i &lt; instance_number(obj_sqr_parent); i++)
        {
            var tmp = instance_find(obj_sqr_parent, i);
            if(tmp != id)
            {
                if(cube_collision(id, tmp) == true)
                {
                    gx = oldx;
                    gy = oldy;
                    gz = oldz;
                }
            }
        }
    }
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> var RIG = 8;       //draw_y1
 var RIG1 = 8;      //draw_y2
 var delta_y = 12;
 var draw_x = 300;
 /*draw_set_color(c_red); 
 
 draw_text(240, RIG1, "N EROE: " + string(instance_number(EROE)));
 RIG1 += 16;
 draw_set_color(c_blue); 
 draw_text(240, RIG1, "N BLU_82: " + string(instance_number(BLU_82)));
 RIG1 += 16;
 draw_set_color(c_red); 
 draw_text(240, RIG1, "t1: " + string(t1));*/

 
if(selected &gt; -1)
{
    draw_set_color(c_green);
    if(!instance_exists(selected)) 
    {
        exit;
    }
    draw_text(draw_x, RIG, "selezione: " + object_get_name(selected));
    RIG += delta_y;
    draw_text(draw_x, RIG, "gy: " + string(selected.gy));
    RIG += delta_y;
    draw_text(draw_x, RIG, "gz: " + string(selected.gz));
    RIG += delta_y;
    draw_text(draw_x, RIG, "length: " + string(selected.length));
    RIG += delta_y;
    draw_text(draw_x, RIG, "width: " + string(selected.width));
    RIG += delta_y;
    draw_text(draw_x, RIG, "height: " + string(selected.height));
  /*RIG += 12;
  draw_text(100, RIG, "LEN: " + string(selected.LEN));
  RIG += 12;
  draw_text(100, RIG, "WID: " + string(selected.WID));
  RIG += 12;
  draw_text(100, RIG, "HEI: " + string(selected.HEI));
  RIG += 12;
  draw_text(100, RIG, "XO: " + string(selected.XO));
  RIG += 12;
  draw_text(100, RIG, "YO: " + string(selected.YO));
  RIG += 12;
  draw_text(100, RIG, "NUMB: " + string(obj_general.NUMB));*/
} 

/*
if(instance_exists(t1))
{
    with(t1)
    {
        draw_text(300, 500, "XO: " + string(sprite_get_xoffset(t1)));
        draw_text(300, 530, "XO: " + string(sprite_get_yoffset(t1)));
    } 
}  */
 
RIG += delta_y * 2;
draw_text(draw_x, RIG, "A1: " + string(A1));
RIG += delta_y;
draw_text(draw_x, RIG, "B1: " + string(A2));
RIG += delta_y;
draw_text(draw_x, RIG, "A1: " + string(A3));
RIG += delta_y;
draw_text(draw_x, RIG, "B1: " + string(A4));
RIG += delta_y * 2;
draw_text(draw_x, RIG, "A1: " + string(B1));
RIG += delta_y;
draw_text(draw_x, RIG, "B1: " + string(B2));
RIG += delta_y;
draw_text(draw_x, RIG, "A1: " + string(B3));
RIG += delta_y;
draw_text(draw_x, RIG, "B1: " + string(B4));


 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IND -= 1;
if(IND &lt; 0)
{
    IND = instance_number(obj_sqr_parent) - 1;
}
selected = instance_find(obj_sqr_parent, IND);
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IND += 1;
if (IND &gt;= instance_number(obj_sqr_parent))
{
    IND = 0;
}
selected = instance_find(obj_sqr_parent, IND);
if(!instance_exists(selected))
{
    show_message("Non esiste !");
}
else
{
    with(selected)
    {
        sqr_set_size(id, length, width, height);
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
