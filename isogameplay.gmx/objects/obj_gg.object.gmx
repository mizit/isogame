<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_gg</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_move</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*if (instance_number(obj_gg_container) == 0)
{
    instance_create(0, 0, obj_gg_container);
}*/
gspeed = 0.2;
jump = 1;
height = 1.5;
//sqr_set_size(id, 1, 1, 1.5);
skill = 0;
key_weapon = ord("W");
key_magick = ord("R");
key_right = ord("D");
key_up = ord("E");
key_left = ord("S");
key_down = ord("X");
key_jump = vk_space;
weapon_script = noone;
magick_script = noone;
last_direction = DIRECTION.RIGHT;

hp_max = 4;
magick_max = 12;
hp = 0;
magick = 4;

hp_x = 30;
hp_y = 30;
hp_step = 32;

magick_x = 30;
magick_y = 62;
magick_step = 32;

//hero_from_tmp();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>set_shadow(s_tst_shadow);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/*var enemy = enemy_meeting();
if (enemy != noone)
{
    hero_get_damage(enemy.damage);
}*/
for (var i = 0; i &lt; ds_list_size(collision_list); i++)
{
    var c_obj = collision_list[| i];
    if (instance_exists(c_obj))
    {
        if (object_is_ancestor(c_obj.object_index, obj_enemy))
        {
            hero_get_damage(c_obj.damage);
        }
    }
}

if (DEBUG)
{
    exit;
}

push_3d(id, (keyboard_check(key_right) - keyboard_check(key_left)) * other.gspeed,
(keyboard_check(key_down) - keyboard_check(key_up)) * other.gspeed, 0);

if (keyboard_check(key_right))
{
    last_direction = DIRECTION.RIGHT;
}
if (keyboard_check(key_left))
{
    last_direction = DIRECTION.LEFT;
}
if (keyboard_check(key_up))
{
    last_direction = DIRECTION.UP;
}
if (keyboard_check(key_down))
{
    last_direction = DIRECTION.DOWN;
}

if (keyboard_check_pressed(key_jump))
{
    dgz += jump;
}

if (keyboard_check_pressed(key_weapon))
{
    if (script_exists(weapon_script))
    {
        script_execute(weapon_script);
    }
}

if (keyboard_check_pressed(key_magick))
{
    if (script_exists(magick_script))
    {
        script_execute(magick_script);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set marker of arrived

var map_list = obj_map_saver.list;

for (var i = 0; i &lt; ds_list_size(map_list); i++)
{
    var tile = map_list[| i];
    if ((tile[| MAP_TILE.X] == room_x) &amp;&amp; (tile[| MAP_TILE.Y] == room_y))
    {
        tile[| MAP_TILE.COLOUR] = c_green;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw hp
for (var i = 0; i &lt; hp_max; i+=2)
{
    if ((i + 2) &lt;= hp)
    {
        draw_sprite(s_hp_full, -1, hp_x + hp_step * i / 2, hp_y);
    }
    else if ((i + 1) &lt;= hp)
    {
        draw_sprite(s_hp_med, -1, hp_x + hp_step * i / 2, hp_y);
    }
    else
    {
        draw_sprite(s_maghp_empty, -1, hp_x + hp_step * i / 2, hp_y);
    }
}
//Draw magick
for (var i = 0; i &lt; magick_max; i+=2)
{
    if ((i + 2) &lt;= magick)
    {
        draw_sprite(s_mag_full, -1, magick_x + magick_step * i / 2, magick_y);
    }
    else if ((i + 1) &lt;= magick)
    {
        draw_sprite(s_mag_med, -1, magick_x + magick_step * i / 2, magick_y);
    }
    else
    {
        draw_sprite(s_maghp_empty, -1, magick_x + magick_step * i / 2, magick_y);
    }
}
//Draw buffs
var bf_x = window_get_width() - 25;
var bf_y = 50;
var bf_x_step = -40;
var bf_y_step = 50;
var bf_max_str = 5;
for (var i = 0; i &lt; ds_list_size(buff_list); i++)
{
    var tmp_buff = buff_list[| i];
    var tmp_spr = tmp_buff[| BUFF.SPRITE];
    if (sprite_exists(tmp_spr))
    {
        if (tmp_buff[| BUFF.BASE_TIME] &gt; 0)
        {
            draw_sprite_ext(tmp_spr, -1, 
            bf_x + (bf_x_step % bf_max_str),
            bf_y + floor(i / bf_max_str) * bf_y_step, 1, 1, 0, c_white, 0.3);
            var bf_y_edge = sprite_get_height(tmp_spr) * (tmp_buff[| BUFF.TIME] / tmp_buff[| BUFF.BASE_TIME]);
            draw_sprite_part(tmp_spr, -1, 0, sprite_get_height(tmp_spr) - bf_y_edge, sprite_get_width(tmp_spr), 
            bf_y_edge, bf_x + (bf_x_step % bf_max_str) - sprite_get_xoffset(tmp_spr),
            bf_y + floor(i / bf_max_str) * bf_y_step + sprite_get_height(tmp_spr) - bf_y_edge - 
            sprite_get_yoffset(tmp_spr));
        }
        else
        {
            draw_sprite(tmp_spr, -1, 
            bf_x + (bf_x_step % bf_max_str),
            bf_y + floor(i / bf_max_str) * bf_y_step);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0, 0, obj_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
