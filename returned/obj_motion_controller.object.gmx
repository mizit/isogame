<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 
 gspeed = 0.1;
 IND = 0;
 //selected = obj_general.list_pos_obj[| IND].object_index; 
 selected = -1;//CUBO_0;
 layers_select = 3;

  globalvar A1,A2,A3,A4,B1,B2,B3,B4;
  
  A1 = 0;
  A2 = 0;
  A3 = 0;
  A4 = 0;
  B1 = 0;
  B2 = 0;
  B3 = 0;
  B4 = 0;
  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //if(keyboard_check_pressed(ord('4'))){
  //selected = CUBO_0;
 //}
 //selected = obj_general.list_pos_obj[| IND].object_index;
 //if(IND &lt; 5) then IND += 1;
 //show_message(string(selected));
 if(selected == -1) then exit;
 if(not instance_exists(selected)){
  //show_message("Non esiste !");
  selected = noone;
 }else{
  //show_message(string(selected.id));
  with(selected.object_index){
  var oldx, oldy, oldz;
  oldx = gx;
  oldy = gy;
  oldz = gz;
  //show_message("gx: " + string(oldx) + "#gy: " + string(gy) + "#gz: " + string(gz));
  
  gx += (keyboard_check(ord('D')) - keyboard_check(ord('S'))) * other.gspeed;
  gy += (keyboard_check(ord('X')) - keyboard_check(ord('E'))) * other.gspeed;
  gz += (keyboard_check(vk_up) - keyboard_check(vk_down)) * other.gspeed;
  
  //XO += (keyboard_check_pressed(vk_right) - keyboard_check_pressed(vk_left)) * 1;
/*
  if(keyboard_check_pressed(vk_right)){
   XO -= 1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_left)){
   XO += 1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad2)){
   YO += 1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad1)){
   YO -= 1;
   sqr_set_size(id, length, width, height);
  }
  
  if(keyboard_check_pressed(vk_numpad4)){
   width -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad5)){
   width += 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad7)){
   WID -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad8)){
   WID += 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad9)){
   LEN += 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_numpad6)){
   LEN -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  
  if(keyboard_check_pressed(ord("K"))){
   length += 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(ord("M"))){
   length -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  
  if(keyboard_check_pressed(ord("A"))){
   HEI += 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(ord("Z"))){
   HEI -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  
  if(keyboard_check_pressed(vk_f10)){
   height -= 0.1;
   sqr_set_size(id, length, width, height);
  }
  if(keyboard_check_pressed(vk_f11)){
   height += 0.1;
   sqr_set_size(id, length, width, height);
  }
  */
  
  
  
  if(gz &lt;= 0){
   gz = 0;
  }
  
  for(var i = 0; i &lt; instance_number(obj_sqr_parent); i++){
   var tmp = instance_find(obj_sqr_parent, i);
   if(tmp != id){
    if(cube_collision(id, tmp) == true){
     gx = oldx;
     gy = oldy;
     gz = oldz;
    }
   }
  }
 }
}



/*
  if(keyboard_check_pressed(ord("T"))){
   A1 += 0.01;
  }
  if(keyboard_check_pressed(ord("G"))){
   A1 -= 0.01;
  }
  if(keyboard_check_pressed(ord("Y"))){
   A2 += 0.01;
  }
  if(keyboard_check_pressed(ord("H"))){
   A2 -= 0.01;
  }
  if(keyboard_check_pressed(ord("U"))){
   A3 += 0.01;
  }
  if(keyboard_check_pressed(ord("J"))){
   A3 -= 0.01;
  }
  if(keyboard_check_pressed(ord("I"))){
   A4 += 0.01;
  }
  if(keyboard_check_pressed(ord("K"))){
   A4 -= 0.01;
  }
 */



/*
 if(keyboard_check_pressed(ord("U"))){
  TCELLSIZE -= 0.1;
 }
 if(keyboard_check_pressed (ord("I"))){
  TCELLSIZE += 0.1;
 } 
 if(keyboard_check_pressed(ord("O"))){
  TCELLHIGHT -= 0.01;
 }
 if(keyboard_check_pressed(ord("P"))){
  TCELLHIGHT += 0.01;
 } 
 
 
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> RIG = 8;
 RIG1 = 8;
 draw_set_color(c_red); 
 
 draw_text(240, RIG1, "N EROE: " + string(instance_number(EROE)));
 RIG1 += 16;
 draw_set_color(c_blue); 
 draw_text(240, RIG1, "N BLU_82: " + string(instance_number(BLU_82)));
 RIG1 += 16;
 draw_set_color(c_red); 
 draw_text(240, RIG1, "t1: " + string(t1));

 
 if(selected &gt; -1){
  //show_message("selected: " + string(selected));
  //show_message("nome: " + string(object_get_name(selected)));

  draw_set_color(c_green );
  //if(not instance_exists(t1)) then exit;
  //if(not instance_exists(obj_general.list_set_obj[| 0])) then exit;
  
  draw_text(100, RIG, "selezione: " + string(object_get_name(selected)));
  //draw_text(100, RIG, "selezione: " + string(object_get_name(obj_general.list_set_obj[| 0].object_index)));
  if(not instance_exists(selected)) then exit;
  RIG += 12;
  draw_text(100, RIG, "gy: " + string(selected.gy));
  RIG += 12;
  draw_text(100, RIG, "gz: " + string(selected.gz));
  RIG += 12;
  draw_text(100, RIG, "length: " + string(selected.length));
  RIG += 12;
  draw_text(100, RIG, "width: " + string(selected.width));
  RIG += 12;
  draw_text(100, RIG, "height: " + string(selected.height));
  RIG += 12;
  draw_text(100, RIG, "LEN: " + string(selected.LEN));
  RIG += 12;
  draw_text(100, RIG, "WID: " + string(selected.WID));
  RIG += 12;
  draw_text(100, RIG, "HEI: " + string(selected.HEI));
  RIG += 12;
  draw_text(100, RIG, "XO: " + string(selected.XO));
  RIG += 12;
  draw_text(100, RIG, "YO: " + string(selected.YO));
  RIG += 12;
  draw_text(100, RIG, "NUMB: " + string(obj_general.NUMB));
 } 

  if(instance_exists(t1)){
   with(t1){
    draw_text(300, 500, "XO: " + string(sprite_get_xoffset(t1)));
    draw_text(300, 530, "XO: " + string(sprite_get_yoffset(t1)));
   } 
  } 
  
 

 
 
 RIG += 12;
 RIG += 12;
 draw_text(100, RIG, "A1: " + string(A1));
 RIG += 12;
 draw_text(100, RIG, "B1: " + string(A2));
 RIG += 12;
 draw_text(100, RIG, "A1: " + string(A3));
 RIG += 12;
 draw_text(100, RIG, "B1: " + string(A4));
 RIG += 12;
 RIG += 12;
 draw_text(100, RIG, "A1: " + string(B1));
 RIG += 12;
 draw_text(100, RIG, "B1: " + string(B2));
 RIG += 12;
 draw_text(100, RIG, "A1: " + string(B3));
 RIG += 12;
 draw_text(100, RIG, "B1: " + string(B4));
 
  
 /*
 if(obj_general.list_pos_obj[| IND] &gt;= 0){
  RIG += 12;
  draw_text(100, RIG, "ID: " + string(obj_general.list_pos_obj[| IND]));
  RIG += 12;
  draw_text(100, RIG, "GX: " + string(obj_general.list_pos_obj[| IND].gx));
  RIG += 12;
  draw_text(100, RIG, "GY: " + string(obj_general.list_pos_obj[| IND].gy));
 } 

 
 RIG += 12;
 draw_text(100, RIG, "layers_select: " + string(layers_select));
 RIG += 12;
 draw_text(100, RIG, "XO: " + string(selected.XO));
 RIG += 12;
 draw_text(100, RIG, "YO: " + string(selected.YO));
 RIG += 12;
 draw_text(100, RIG, "IND: " + string(IND));


 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 IND -= 1;
 //show_message(string(ds_list_size(obj_general.list_pos_obj)));
 if(IND &lt; 0){
  IND = ds_list_size(obj_general.list_pos_obj) - 1;
 }
 selected = obj_general.list_pos_obj[| IND];//.object_index;
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 IND += 1;
 
 //selected = obj_general.list_pos_obj[| IND].object_index;
 //exit;
 
 
 //show_message(string(ds_list_size(obj_general.list_pos_obj)));
 if(IND == ds_list_size(obj_general.list_pos_obj)){
  IND = 0;
 }
 selected = obj_general.list_pos_obj[| IND].object_index;
 //show_message(string(obj_general.list_pos_obj[| IND].object_index));
 //show_message(string(object_get_name(obj_general.list_pos_obj[| IND].object_index)));
 if(not instance_exists(selected)){
  show_message("Non esiste !");
 }else{
  with(selected){
   sqr_set_size(id, length, width, height);
  }
 } 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
